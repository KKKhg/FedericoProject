<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapperInterface.ClientMapper">

	<!-- 회원가입 insertClient -->
	<insert id="insertClient">
		INSERT INTO client(clientId, clientPassword, clientName, clientPhone, clientBirthday, clientAddress, clientEmail, smsCheck, emailCheck)
		VALUES (#{clientId}, #{clientPassword},#{clientName},#{clientPhone},#{clientBirthday},#{clientAddress},#{clientEmail},#{smsCheck},#{emailCheck})
	</insert>
	<!-- 클라이언트 selectOne (WHERE = ID) -->
	<select id="selectOne" resultType="vo.ClientVO">
		SELECT * FROM client where clientId = #{clientId}
	</select>
	<!-- 클라이언트 selectOne (WHERE = Phone) -->
	<select id="selectOnePhone" resultType="vo.ClientVO">
		SELECT * FROM client where clientPhone = #{clientPhone}
	</select>
	
	<!-- 클라이언트 pw 변경 -->
	<insert id="updateClientPw">
		UPDATE client SET clientPassword = #{clientPassword}
		WHERE clientId = #{clientId}
	</insert>
	
	
<!-- ======================= 카트 관련 ====================== -->
	
	<resultMap type="vo.CartVO" id="CartVO">
		<result property="cartSeq" column="cartSeq"/>
		<result property="clientId" column="clientId"/>
		<result property="menuQty" column="menuQty"/>
		<collection property="menuVo" resultMap="MenuVO"></collection>
	</resultMap>
	
	<resultMap type="vo.MenuVO" id="MenuVO">
		<result property="menuIndex" column="menuIndex"/>
		<result property="menuName" column="menuName"/>
		<result property="menuFlag" column="menuFlag"/>
		<result property="menuPrice" column="menuPrice"/>
		<result property="menuImage" column="menuImage"/>
		<result property="menuLive" column="menuLive"/>
	</resultMap>
	
	
	
	<!-- 회원장바구니에 항목 추가 -->
	<insert id="insertCart">
		INSERT INTO cart(cartseq, clientid, menuindex, menuqty)
		VALUES ((SELECT nvl(max(cartseq),0)+1 FROM cart), #{clientId}, #{menuVo.menuIndex}, #{menuQty})
	</insert>
	
	
	<!-- 회원장바구니 조회 by 고객 -->
	<select id="selectCartbyClient" resultMap="CartVO">
		SELECT c.*, m.* FROM cart c, menuinfo m WHERE clientid = #{clientId} AND c.menuindex = m.menuindex
	</select>
	
	<!-- 회원장바구니 메뉴 수량변경  -->
	<update id="updateCart">
		UPDATE cart SET menuqty = #{menuQty} WHERE cartseq = #{cartSeq}
	</update>
	
	<!-- 회원장바구니 1품목 삭제 -->
	<delete id="deleteCart">
		DELETE FROM cart WHERE cartseq = #{cartSeq}
	</delete>
	
	<!-- 특정회원 장바구니 삭제 -->
	<delete id="deleteCartbyClientId">
		DELETE FROM cart WHERE clientid = #{clientId}
	</delete>

<!-- ======================= 카트 관련 ====================== -->




<!-- ============================(공지사항게시판)==================== -->
	<!-- searchNoticeBoardRow -->
	<select id="searchNoticeBoardRows" resultType="int">
		SELECT COUNT(*) FROM noticeboard <include refid="noticeSearch"></include>
	</select>

		<!-- searchNotice 서치,페이징 -->
	<select id="searchNoticeBoard" resultType="vo.NoticeBoardVO">
		SELECT seq,title,id,content, regdate, cnt ,noticeFlag
		FROM noticeBoard <include refid="noticeSearch"></include> 
		ORDER BY seq desc
		OFFSET #{sno}-1 ROWS FETCH NEXT #{rowsPerPage} ROWS ONLY
	</select>
	
		<!-- 공지사항 noticeFlag='Y'만 출력 -->
	<select id="selectNoticeBoard" resultType="vo.NoticeBoardVO">
		SELECT seq,title,id,content, regdate, cnt ,noticeFlag
		FROM noticeBoard
		WHERE noticeFlag='Y'
		ORDER BY seq desc
	</select>
	
		<!-- 공지사항 클릭시 Detail 출력 -->
	<select id="selectDetailNoticeBoard" resultType="vo.NoticeBoardVO">
		SELECT seq,title,id,content, regdate, cnt ,noticeFlag
		FROM noticeBoard
		WHERE seq=#{seq}
	</select>
	<!-- 공지사항 조회수증가 -->
	<update id="countUpNoticeBoard">
		update noticeBoard set cnt=cnt+1 where seq=#{seq}
	</update>

	<sql id="noticeSearch" >
		<if test="keyword != null">
			<bind name="keyVal" value="'%'+keyword+'%'"/>
		</if>
	<choose>
		<when test="searchType == 'title'.toString()">
			where title LIKE #{keyVal}
		</when>
		<when test="searchType == 'content'.toString()">
			where content LIKE #{keyVal}
		</when>
		<when test="searchType == 'titleContent'.toString()">
			where title LIKE #{keyVal} OR title LIKE #{keyVal}
		</when>
	</choose>
	</sql>
	
	<!-- ============================={ 이벤트 페이지 }================================ -->
	<!-- searchEventBoardRow -->
	<select id="searchEventBoardRows" resultType="int">
		SELECT COUNT(*) FROM EVENTBOARD <include refid="eventSearch"></include>
	</select>

		<!-- searchEventBoard 서치,페이징 -->
	<select id="searchEventBoard" resultType="vo.EventBoardVO">
		SELECT eventSeq, title, hoId, content, startDate, endDate
		FROM eventBoard <include refid="eventSearch"></include> 
		ORDER BY eventSeq desc
		OFFSET #{sno}-1 ROWS FETCH NEXT #{rowsPerPage} ROWS ONLY
	</select>
		
		<!-- 이벤트 게시판 클릭시 Detail 출력 -->
	<select id="selectDetailEventBoard" resultType="vo.EventBoardVO">
		SELECT eventSeq, title, hoId, content, startDate, endDate
		FROM eventBoard
		WHERE eventSeq=#{eventSeq}
	</select>
	
	<sql id="eventSearch" >
		<if test="keyword != null">
			<bind name="keyVal" value="'%'+keyword+'%'"/>
		</if>
	<choose>
		<when test="searchType == 'title'.toString()">
			where title LIKE #{keyVal}
		</when>
		<when test="searchType == 'content'.toString()">
			where content LIKE #{keyVal}
		</when>
		<when test="searchType == 'titleContent'.toString()">
			where title LIKE #{keyVal} OR title LIKE #{keyVal}
		</when>
	</choose>
	</sql>

	<!-- 고객의소리 등록 -->
	<insert id="complainInsert">
	INSERT INTO complainBOARD VALUES((select nvl(max(seq),0)+1 from complainBOARD c),
		#{title}, #{clientName}, #{clientPhone}, #{content}, sysdate, 'N',#{head},#{fcId},#{clientEmail})
	</insert>


		<!-- searchCompainBoardRow -->
	<select id="searchComplainBoardRows" resultType="int">
		SELECT COUNT(*) FROM complainBoard <include refid="complainSearch"></include>
	</select>

		<!-- searchCompain 서치,페이징 -->
	<select id="searchComplainBoard" resultType="vo.ComplainBoardVO">
		SELECT *
		FROM complainBoard <include refid="complainSearch"></include> 
		ORDER BY seq desc
		OFFSET #{sno}-1 ROWS FETCH NEXT #{rowsPerPage} ROWS ONLY
	</select>

	<sql id="complainSearch">
		<if test="keyword != null">
			<bind name="keyVal" value="'%'+keyword+'%'" />
		</if>
		<choose>
			<when test="searchType == 'title'.toString()">
				where title LIKE #{keyVal}
			</when>
			<when test="searchType == 'content'.toString()">
				where content LIKE #{keyVal}
			</when>
			<when test="searchType == 'titleContent'.toString()">
				where title LIKE #{keyVal} OR title LIKE #{keyVal}
			</when>
			<when test="searchType == 'clientName'.toString()">
				where clientName LIKE #{keyVal}
			</when>
			<when test="searchType == 'clientPhone'.toString()">
				where clientPhone LIKE #{keyVal}
			</when>
			<when test="searchType == 'completeFlag'.toString()">
				where completeFlag LIKE #{keyVal}
			</when>
			<when test="searchType == 'fcId'.toString()">
				where fcId LIKE #{keyVal}
			</when>
		</choose>
	</sql>



	<!-- 컴플레인 클릭시 Detail 출력 -->
	<select id="selectDetailComplainBoard" resultType="vo.ComplainBoardVO">
		SELECT * FROM COMPLAINBOARD
		WHERE SEQ = #{seq}
	</select>
	
	<!-- 컴플레인 완료처리 -->
	<insert id="complainComplete" >
		UPDATE complainBoard SET 
		completeFlag = 'Y'
		WHERE seq=#{seq}
	</insert>
	
	<!-- 고객의소리 댓글등록 -->
	<insert id="complainCommentInsert">
	INSERT INTO complainComment VALUES((select nvl(max(commentSeq),0)+1 from complainComment c),
		#{complainBoardSeq}, #{commentContent}, sysdate, #{hoId})
	</insert>
	
	
	<!-- 고객의소리 댓글출력 -->
	<select id="selectListComplainComment" resultType="vo.ComplainCommentVO">
	SELECT * FROM complainComment 
	WHERE complainBoardSeq = #{complainBoardSeq}
	ORDER BY commentSeq desc
	</select>
	
	<!-- 고객의소리 댓글삭제 -->
	<delete id="deleteComplainComment">
	DELETE FROM complainComment 
	WHERE commentSeq = #{commentSeq}
	</delete>

</mapper>










